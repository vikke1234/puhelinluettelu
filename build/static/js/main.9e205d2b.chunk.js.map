{"version":3,"sources":["network.js","phonerecords.js","App.js","index.js"],"names":["network","axios","get","then","response","data","new_person","post","id","delete","concat","person","put","updateList","setShown","setPersons","networkService","Numbers","_ref","persons","setErrorMessage","console","log","map","name","number","react_default","a","createElement","key","onClick","window","confirm","catch","handleClick","PersonForm","props","_useState","useState","_useState2","Object","slicedToArray","newName","setNewName","_useState3","_useState4","newNumber","setNewNumber","onSubmit","event","preventDefault","found","i","length","onChange","target","value","type","Notification","message","className","App","shown","_useState5","_useState6","errorMessage","useEffect","tmp","filter","toLowerCase","includes","phonerecords_PersonForm","App_Notification","phonerecords_Numbers","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9e205d2b.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseurl = '/persons'\n\nconst post = (new_person) => {\n  const request = axios.post(baseurl, new_person)\n  return request.then(response => response.data)\n}\n\nconst getAll = () => {\n  const request = axios.get(baseurl)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const response = axios.delete(`${baseurl}/${id}`)\n  return response\n}\n\nconst put = (person, id) => {\n  const response = axios.put(`${baseurl}/${id}`, person)\n  return response\n}\n\nexport default {getAll, post, remove, put}\n","import React, { useState } from \"react\"\nimport networkService from \"./network\"\n\nconst updateList = (setShown, setPersons) => {\n  networkService.getAll().then(response => {\n    setPersons(response)\n    setShown(response)\n  })\n}\n\nexport const Numbers = ({ persons, setShown, setPersons, setErrorMessage}) => {\n  \n  const handleClick = person => {\n    if (window.confirm(`poistetaanko ${person.name}`)) {\n      networkService.remove(person.id).then((response) => {\n        updateList(setShown, setPersons)\n      }).catch(response => setErrorMessage(`error removing ${person.name}, already removed`))\n    }\n  }\n  console.log('Numbers: ', persons[0])\n\n  let rows = persons.map(person => {\n    console.log(`${person.name} ${person.number} ${person.id}`)\n    return (\n      <p key={person.id}>\n        {person.name} {person.number}{\" \"}\n        <button onClick={() => handleClick(person)}>poista</button>\n      </p>\n    )\n  })\n  return rows\n}\n\nexport const PersonForm = props => {\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n\n  const submit = event => {\n    event.preventDefault()\n\n    let found = false\n    let id = -1\n    for (let i = 0; i < props.persons.length; i++) {\n      if (props.persons[i].name === newName) {\n        found = true\n        id = props.persons[i].id\n        break\n      }\n    }\n\n    let new_person = { name: newName, number: newNumber }\n    if (found) {\n      if (window.confirm(`${newName} on jo luettelussa, haluutko korvata`)) {\n        networkService\n          .put(new_person, id)\n          .then(() => updateList(props.setShown, props.setPersons))\n          .catch('error changing the number')\n          setNewName(\"\")\n          setNewNumber(\"\")\n      }\n    } else {\n      networkService\n        .post(new_person)\n        .then(response => updateList(props.setShown, props.setPersons))\n        .catch(response => props.setErrorMessage('error adding new person to list'))\n    }\n  }\n\n  return (\n    <form onSubmit={submit}>\n      <div>\n        nimi: <input onChange={event => setNewName(event.target.value)} />\n      </div>\n      <div>\n        numero: <input onChange={event => setNewNumber(event.target.value)} />\n      </div>\n      <div>\n        <button type=\"submit\">lisää</button>\n      </div>\n    </form>\n  )\n}\n\n\n","import React, { useState, useEffect } from \"react\"\nimport network from \"./network\"\nimport { Numbers, PersonForm } from \"./phonerecords\"\nimport \"./app.css\"\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return <div className=\"error\">{message}</div>\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [shown, setShown] = useState(persons)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    network.getAll().then(response => {\n      let tmp = response\n      setPersons(tmp)\n      setShown(tmp)\n      console.log(tmp)\n    })\n  }, [])\n  const filter = name => {\n    setShown(persons.filter(person => person.name.toLowerCase().includes(name)))\n  }\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      rajaa: <input onChange={event => filter(event.target.value)} />\n      <h3>lisäää uusi</h3>\n        <PersonForm\n          persons={persons}\n          setPersons={setPersons}\n          setShown={setShown}\n          setErrorMessage = {setErrorMessage}\n        />\n      <Notification message={errorMessage} />\n      <h2>Numerot</h2>\n      <div>\n        <Numbers \n          persons={shown} \n          setShown={setShown} \n          setPersons={setPersons} \n          setErrorMessage = {setErrorMessage}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from './App.js'\n\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}